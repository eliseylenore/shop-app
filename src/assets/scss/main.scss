
/* GLOBAL: INCLUDES
 *
 * It is recommended to only include variables,
 * mixins, etc. in this file, to prevent duplicated
 * CSS in your final, compiled files.
 */
@import "../styles/custom-bootstrap-pre";
@import "~bootstrap/scss/bootstrap";
@import "~bootstrap-vue/src/index.scss";
@import "../styles/custom-bootstrap-post";

@import "../styles/functions";
@import "../styles/mixins";
@import "../styles/spacing";

$prussianBlue: #00264d;
$midnightBlue: #003060;
$chathamsBlue: #114170;
$congressBlue: #014790;
$scienceBlue: #015fc0;
$linkWater: #D9E7F5;
$coral: #ff744e;
$persimmon: #FF5E5C;
$silver: #CCCCCC;

@mixin focus-glow($color: null) {
  @if $color == null {
    $color: $persimmon;
  }
  box-shadow: 0px 0px 4px 4px $color;
  outline-width: 2px;
  outline-style: dotted;
  outline-color: transparent;
}

.red-text {
  color: #cc0000;
}




/* Custom scss bootstrap variable overrides
   https://getbootstrap.com/docs/4.0/getting-started/theming/
--------------------------------------------- */

$breakpoints: $grid-breakpoints;

// Respond above.
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}
